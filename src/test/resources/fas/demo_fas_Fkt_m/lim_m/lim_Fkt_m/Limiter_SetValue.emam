package fas.demo_fas_Fkt_m.lim_m.lim_Fkt_m;

import fas.basicLibrary.*;
import fas.demo_fas_Fkt_m.lim_m.lim_Fkt_m.lim_SetVal_m.V_LimSetValuePlus;
import fas.demo_fas_Fkt_m.lim_m.lim_Fkt_m.lim_SetVal_m.V_LimSetValueMinus;

component Limiter_SetValue {
	port
		in (-oo:d:oo) LeverUp_stat,
		in (-oo:d:oo) LeverDown_stat,
		in (-oo:d:oo) DEMO_FAS_V_LimiterSetValue_Read,
		in B Enabled_Cond,
		out (-oo:d:oo) DEMO_FAS_V_LimiterSetValue_Write;

	instance Greater<(-oo:d:oo)> greater1, greater2;
	instance Memory<(-oo:d:oo)>(0) mem1, mem2;
	instance SwitchB<(-oo:d:oo)> switch1, switch2, switch3;
	instance V_LimSetValuePlus plus;
	instance V_LimSetValueMinus minus;

	connect LeverUp_stat -> switch1.in1;
	connect LeverDown_stat -> switch2.in1;
	connect DEMO_FAS_V_LimiterSetValue_Read -> plus.V_LimiterSetValue, minus.V_LimiterSetValue, switch3.in3;
	connect Enabled_Cond -> switch1.cond, switch2.cond, switch3.cond;
	connect mem1.out1 -> switch1.in3;
	connect mem2.out1 -> switch2.in3;
	connect switch1.out1 -> mem1.in1, greater1.in1;
	connect switch2.out1 -> mem2.in1, greater2.in1;
	connect 0 -> greater1.in2;
	connect 0 -> greater2.in2;
	connect greater1.out1 -> plus.trigger;
	connect greater2.out1 -> minus.trigger;
	connect minus.out1 -> plus.in1;
	connect plus.out1 -> switch3.in1;
	connect switch3.out1 -> DEMO_FAS_V_LimiterSetValue_Write;
}
