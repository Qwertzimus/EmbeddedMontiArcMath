package fas.demo_fas_Fkt_m.tem_m.t_Fkt_m.cc_Set_m.cc_Cha_m;

import fas.basicLibrary.*;
import fas.advancedLibrary.*;
import fas.demo_fas_Fkt_m.tem_m.t_Fkt_m.cc_Set_m.cc_Cha_m.lvl2_Rep.V_SetValue_PlusLvl2;
import fas.demo_fas_Fkt_m.tem_m.t_Fkt_m.cc_Set_m.cc_Cha_m.lvl2_Rep.V_SetValue_Plus;
import fas.demo_fas_Fkt_m.tem_m.t_Fkt_m.cc_Set_m.cc_Cha_m.lvl2_Rep.V_SetValue_MinusLvl2;
import fas.demo_fas_Fkt_m.tem_m.t_Fkt_m.cc_Set_m.cc_Cha_m.lvl2_Rep.V_SetValue_Minus;
import fas.demo_fas_Fkt_m.tem_m.t_Fkt_m.cc_Set_m.cc_Cha_m.lvl2_Rep.CountDown;
	
component CC_ChangeSetValue_Lvl2_Repeater {
	port
		in (-oo:d:oo) LeverUp_Stat,
		in (-oo:d:oo) LeverDown_Stat,
		in (-oo:d:oo) DEMO_FAS_V_CCSetValue_Read,
		in B Enable,
		in B If,
		out (-oo:d:oo) DEMO_FAS_V_CCSetValue;
		

	instance Equals<(-oo:d:oo)> eq1, eq2, eq3, eq4;
	instance Or4<B> or;
	instance Or3<B> or2;
	instance Not<B> not1, not2;
	instance Memory<B>(0) mem1;
	instance CountDown cDown;
	instance SwitchB<B> switch1, switch2, switch3, switch4, switch5, switch6;
	instance SysInit sInit;
	instance V_SetValue_PlusLvl2 v_SetValuePlus2;
	instance V_SetValue_Plus v_SetValuePlus;
	instance V_SetValue_Minus v_SetValueMinus;
	instance V_SetValue_MinusLvl2 v_SetValueMinus2;
		
	connect LeverUp_Stat -> eq1.in1, eq2.in1;
	connect LeverDown_Stat -> eq3.in1, eq4.in1;
	connect 1 -> eq1.in2;
	connect 2 -> eq2.in2;
	connect 2 -> eq3.in2;
	connect 1 -> eq4.in2;
	connect DEMO_FAS_V_CCSetValue_Read -> v_SetValuePlus2.DEMO_FAS_V_CCSetValue_Read, v_SetValuePlus.DEMO_FAS_V_CCSetValue_Read, v_SetValueMinus.DEMO_FAS_V_CCSetValue_Read, v_SetValueMinus2.DEMO_FAS_V_CCSetValue_Read;
	connect eq1.out1 -> switch1.in3, or.in3;
	connect eq2.out1 -> switch2.in3, or.in4;
	connect eq3.out1 -> switch3.in3, or.in1;
	connect eq4.out1 -> switch4.in3, or.in2;
	connect or.out1 -> not1.in1, switch5.in1;
	connect If -> switch5.cond;
	connect false -> switch5.in3;
	connect switch5.out1 -> cDown.E;
	connect not1.out1 -> or2.in2;
	connect sInit.y -> or2.in3;
	connect 30/*demo_fas_Repeater_Time*/ -> cDown.IV;
	connect or2.out1 -> cDown.R;
	connect cDown.y -> not2.in1;
	connect not2.out1 -> switch6.in1, switch1.cond, switch2.cond, switch3.cond, switch4.cond;
	connect switch6.out1 -> mem1.in1;
	connect mem1.out1 -> switch6.in3, or2.in1;
	connect false -> switch1.in1;
	connect false -> switch2.in1;
	connect false -> switch3.in1;
	connect false -> switch4.in1;
	connect switch1.out1 -> v_SetValuePlus.trigger;
	connect switch2.out1 -> v_SetValuePlus2.trigger;
	connect switch3.out1 -> v_SetValueMinus2.trigger;
	connect switch4.out1 -> v_SetValueMinus.trigger;
	connect Enable -> v_SetValueMinus.Enable, v_SetValueMinus2.Enable, v_SetValuePlus2.Enable, v_SetValuePlus.Enable, switch6.cond, cDown.Enable;
	connect v_SetValuePlus.DEMO_FAS_V_CCSetValue -> v_SetValuePlus2.in1;
	connect v_SetValuePlus2.DEMO_FAS_V_CCSetValue_Write -> DEMO_FAS_V_CCSetValue;
	connect v_SetValueMinus2.DEMO_FAS_V_CCSetValue -> v_SetValuePlus.in1;
	connect v_SetValueMinus.DEMO_FAS_V_CCSetValue -> v_SetValueMinus2.in1;
}
